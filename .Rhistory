males <- subset(gss,gss$sex == "Male")
females <- subset(gss,gss$sex == "Female")
par(mfrow=c(1,2),din = 1.3)
hist(males$educ)
hist(females$educ)
par(mfrow=c(1,2),fin = 1.3)
par(mfrow=c(1,2),fin = 5)
par(mfrow=c(1,2),pin = (20, 10000)
par(mfrow=c(1,2),pin = (20 10000)
par(mfrow=c(1,2),pin = ("20", "10000")
par(mfrow=c(1,2),pin = (20, 10000)
par(mfrow=c(1,2),pin = (20, 10000))
par(mfrow=c(1,2),pin = (20, 10000))
par(mfrow=c(1,2),pin = (20))
par(mfrow=c(1,2))
hist(males$educ)
hist(females$educ)
hist(males$educ, col = "Blue")
hist(females$educ, col = "Red")
by(gss$educ, gss$sex, summary)
densityPlot(males$educ)
plot(density(females$educ))
plot(density(females$educ, na.rm =T))
par(mfrow = c(1,1))
sm.density.compare(males$educ,
females$educ, xlab = "Total symptom score")
library(sm)
sm.density.compare(males$educ,
females$educ, xlab = "Total symptom score")
sm.density.compare(males$educ,
females$educ, xlab = "Total symptom score", na.rm =T)
sm.density.compare(males$educ,na.rm =T,
females$educ,na.rm =T, xlab = "Total symptom score")
m <-subset(gss,gss$sex == "Male", na.rm =T)
f <-subset(gss,gss$sex == "Female", na.rm =T)
sm.density.compare(m$educ,
f$educ, xlab = "Total symptom score")
sm.density.compare(m$educ,f$educ, xlab = "Total symptom score")
table(is.na(m))
plot(density(females$educ, na.rm =T))
plot(density(females$educ, breaks= 50, na.rm =T))
plot(density(females$educ,  na.rm =T))
plot(density(males$educ,  na.rm =T))
par(mfrow=c(1,2))
plot(density(males$educ,  na.rm =T))
plot(density(females$educ,  na.rm =T))
hist(males$educ, col = "Blue")
hist(females$educ, col = "Red")
boxplot(gss$edu ~ males$educ, females$educ)
boxplot(gss$edu ~ males$educ + females$educ)
boxplot(males$educ ~ females$educ)
boxplot(gss$edu ~ gss$sex)
par(mfrow = c(1,1))
boxplot(gss$edu ~ gss$sex)
boxplot(gss$edu ~ gss$sex, col=c("blue", "red"))
hist (gss$educ)
summary(gss$educ)
by(gss$educ, gss$sex, summary)
library("psych", lib.loc="C:/Users/TELEmedia Network/Documents/R/win-library/3.0")
nrow(gss$sex=Male)
nrow(gss$sex="Male")
gss$sex="Male"
table(gss$sex="Male")
table(gss$sex=Male)
head(gss$sex=Male)
table(gss$sex==Male)
table(gss$sex=="Male")
nrow(gss$sex=="Male")
summary(gss$sex=="Male")
DescribeBy(gss, gss$sex)
describeBy(gss, gss$sex)
describeBy(gss$educ, gss$sex)
describeBy(gss$educ, gss$sex)
by(gss$educ, gss$sex, summary)
females <- subset(gss,gss$sex == "Female")
describeBy(gss$educ, gss$sex)
```{r}
boxplot(gss$educ ~ gss$sex, main = "Gender versus Education")
library("psych")
describeBy(gss$educ, gss$sex)
load("D:/My docs/Analysis + Cousera/Satistical_Inference/Labs/Project/statistics_project_gss.Rdata")
by(gss$educ, gss$sex, summary)
library("psych")
describeBy(gss$educ, gss$sex)
par(mfrow=c(1,2))
hist(males$educ, col = "Blue")
hist(females$educ, col = "Red")
males <- subset(gss,gss$sex == "Male")
females <- subset(gss,gss$sex == "Female")
par(mfrow=c(1,2))
hist(males$educ, col = "Blue")
hist(females$educ, col = "Red")
nrow(gss)
31819+25078
57061 - 56897
68+96
dim(gss)
hist(gss$educ)
```{r}
par(mfrow =c(1,1))
hist(gss$educ)
hist(gss$educ, col ="grey")
decribe(gss$educ)
library("psych")
decribe(gss$educ)
describe(gss$educ)
par(mfrow =c(1,1))
hist(gss$educ, col ="grey", main ="Distribution of education attainment by both sexes, xlab =""")
library("psych")
describe(gss$educ)
hist(gss$educ, col ="grey", main ="Distribution of education attainment by both sexes, xlab =""")
hist(gss$educ, col ="grey", main ="Distribution of education attainment by both sexes, xlab ="")
hist(gss$educ, col ="grey", main ="Distribution of education attainment by both sexes", xlab ="")
hist(gss$educ, col ="grey", main ="Distribution of education attainment by both sexes", xlab ="")
by(gss$educ, gss$sex, summary)
describeBy(gss$educ, gss$sex)
par(mfrow=c(1,2), main = "Histogram")
hist(males$educ, col = "Blue")
hist(females$educ, col = "Red")
boxplot(gss$edu ~ gss$sex, col=c("blue", "red"))  ### Box PLot
par(mfrow = c(1,1))
boxplot(gss$edu ~ gss$sex, col=c("blue", "red"))  ### Box PLot
boxplot(gss$edu ~ gss$sex, col=c("blue", "red"), main = "Boxplot distribution of gender versus education")  ### Box PLot
boxplot(gss$edu ~ gss$sex, col=c("blue", "red"), main = "Boxplot distribution of gender versus education", xlab ="Figure 2")         ### Box PLot
hist(males$educ, col = "Blue", main = "Distribution of Males", xlab ="Highest year of school completed")
hist(females$educ, col = "Red", main = "Distribution of Females", xlab ="Highest year of school completed")
par(mfrow=c(1,2))
hist(males$educ, col = "Blue", main = "Distribution of Males", xlab ="Highest year of school completed")
hist(females$educ, col = "Red", main = "Distribution of Females", xlab ="Highest year of school completed")
hist(males$educ, col = "Blue", main = "Distribution of Males", xlab ="Highest year of school completed")
hist(females$educ, col = "Red", main = "Distribution of Females", xlab ="Highest year of school completed")
text(5, labels = "Figure 2"
par(mfrow=c(1,2))
hist(males$educ, col = "Blue", main = "Distribution of Males", xlab ="Highest year of school completed")
hist(females$educ, col = "Red", main = "Distribution of Females", xlab ="Highest year of school completed")
text(5, labels = "Figure 2")
par(mfrow=c(1,2))
hist(males$educ, col = "Blue", main = "Distribution of Males", xlab ="Highest year of school completed")
hist(females$educ, col = "Red", main = "Distribution of Females", xlab ="Highest year of school completed")
text(5, labels = "Figure 2")
text(4, 2,labels = "Figure 2")
text(10, 2,labels = "Figure 2")
par(mfrow=c(1,2))
hist(males$educ, col = "Blue", main = "Distribution of Males", xlab ="Highest year of school completed")
hist(females$educ, col = "Red", main = "Distribution of Females", xlab ="Highest year of school completed")
text(10, 2,labels = "Figure 2")
text(10, 20,labels = "Figure 2")
text(1, 20,labels = "Figure 2")
text(1, 200,labels = "Figure 2")
par(mfrow=c(1,2))
text(5, 20,labels = "Figure 2")
hist(males$educ, col = "Blue", main = "Distribution of Males", xlab ="Highest year of school completed")
hist(females$educ, col = "Red", main = "Distribution of Females", xlab ="Highest year of school completed")
text(50, 20,labels = "Figure 2")
mtext(50, 20,labels = "Figure 2")
text(50, 20,labels = "Figure 2", adj =0.4)
hist(males$educ, col = "Blue", main = "Distribution of Males", xlab ="Highest year of school completed")
hist(females$educ, col = "Red", main = "Distribution of Females", xlab ="Highest year of school completed")
text(50, 20,labels = "Figure 2", adj =0.4)
text(50, 20,labels = "Figure 2", adj =0.4)
text(50, 20,labels = "Figure 2", adj =0.7)
text(5, 20,labels = "Figure 2", adj =0.7)
text(5, 20,labels = "Figure 2", adj =0.9)
text(5, 20,labels = "Figure 2", adj =2)
text(5, 20,labels = "Figure 2", adj =0.1)
text(5, 2,labels = "Figure 2", adj =0.1)
par(mfrow=c(1,2))
hist(males$educ, col = "Blue", main = "Distribution of Males", xlab ="Highest year of school completed")
hist(females$educ, col = "Red", main = "Distribution of Females", xlab ="Highest year of school completed")
By calculation our point estimate is
by(gss$educ, gss$sex, summary)
12.9 -12.64
summary(gss$educ)
describeBy(gss, gss$sex)
describeBy(gss$educ, gss$sex)
args(pnorm)
pnorm(0.26)
0.35
31819-25078
0.35/6741
sqrt(0.35/6741)
aa <-sqrt(0.35/6741)
0.26/aa
pnorm(36)
pnorm(36.0829)
se = 0.35/sqrt(6741)
se
0.26/se
pnorm(60.0829)
pnorm(0.26) *2
pnorm(60.0829)*2
pnorm(0.26, lower.tail =F)
pnorm(0.26, lower.tail =F) *2
pnorm(60.26, lower.tail =F) *2
se = 0.35/sqrt(6741)
z = 0.26/se
z
0.26/0.22
t =0.26/0.22
pnorm(t)
t
ciMean(gss$males, conf=0.95)
ciMean(gss$males, conf=0.95, na.rm =T)
library("lsr", lib.loc="C:/Users/TELEmedia Network/Documents/R/win-library/3.0")
ciMean(gss$males, conf=0.95, na.rm =T)
ciMean(gss$sex =="male", conf=0.95, na.rm =T)
ciMean(gss$sex ==male, conf=0.95, na.rm =T)
head(males)
ciMean(gss$sex ==male, conf=0.95, na.rm =T)
ciMean(males$sex ==male, conf=0.95, na.rm =T)
ciMean(males$educ, conf=0.95, na.rm =T)
ciMean(females$educ, conf=0.95, na.rm =T)
ciMean(gss$educ, conf=0.95, na.rm =T)
0.26 + (1.181818)* 0.22
0.26 - (1.181818)* 0.22
head(males)
names(males)
head(males[4,8])
head(males[4])
head(c(males[4], males[8])
head(c(males[4], males[8])
```
head(c(males[4], males[8])
head(c(males[4], males[8]))
head(c(males[4], males[8]))
head(gss$sex, gss$edu)
head(gss$sex)
gss[4,8]
head(gss$sex, nrow =10)
args(head)
head(gss$sex, n =10)
data.frame(head(gss$sex, n =10))
data.frame (c(head(gss$sex, n =10),head(gss$educ, n =10))
data.frame (c(head(gss$sex, n =10),head(gss$educ, n =10)))
data.frame (c(head(gss$sex, n =10),head(gss$educ, n =10)))
data.frame (c(head(gss$sex, n =10), head(gss$educ, n =10)))
head(c(males[4], males[8]))
data.frame (c(head(gss$sex, n =10), head(gss$educ, n =10)))
data.frame(head(gss[4], head(gss[8])))
data.frame(c(head(gss[4], head(gss[8]))))
data.frame(c(head(gss[8], head(gss[8]))))
data.frame(c(head(gss[8], head(gss[4]))))
data.frame(list(head(gss[4], head(gss[8]))))
data.frame((head(gss[4], head(gss[8]))))
subset(gss, gss$edu & gss&sex)
head(subset(gss, gss$edu & gss&sex))
head(subset(gss, gss$edu & gss$sex))
head(subset(gss, gss$edu & gss$sex=="male"))
head(subset(gss, gss$[4] & gss[8]))
head(subset(gss, gss[4] & gss[8]))
head(subset(gss, !is.na(gss$edu) & !is.na(gss$sex)))
data.frame (c(males, females)
data.frame (c(males, females))
data.frame (c(males, females))
data.frame (head(c(males, females)))
data.frame (head(c(males, females)), n=2)
```head(males)
head(males)
head(males$sex)
```
sex <- subset(gss, gss$sex)
sex <- subset(gss, gss$sex & gss$educ)
sex <- subset(gss, gss$sex=="male" & gss$educ)
head(sex)
sex
gss[sex]
gss[sex=="male"]
data.frame (head(c(males, females)), n=2)
data.frame (head(c(males, females)), n=2))
data.frame ((head(c(males, females)), n=2))
data.frame ((head(c(males, females)), n=2))
data.frame (head(c(males, females)), n=2)
head(data.frame (head(c(males, females)), n=2))
head(data.frame (head(c(males, females)))
head(data.frame (head(c(males, females))))
head(data.frame (head(c(males, females))))
head(data.frame (head(c(gss[4], gss[8]))))
head(data.frame (head(c(gss[4], gss[8])),n=10))
head(data.frame (head(c(gss[4], gss[8])))), n = 10
head(data.frame (head(c(gss[4], gss[8])))), n = 10)
head(data.frame (head(c(gss[4], gss[8])))n =10)
head(data.frame (head(c(gss[4], gss[8])))n =10)
head(data.frame (head(c(gss[4], gss[8]))))
data.frame (head(c(gss[4], gss[8])))
head(data.frame (head(c(gss[4], gss[8])),n =10))
head(data.frame (head(c(gss[4], gss[8])),n =50))
head(data.frame (head(c(gss[4], gss[8]))) ,n =50)
head(data.frame (head(c(gss[4], gss[8]))) ,n =30)
install.packages("KernSmooth")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.0.2/library")
hhh
library("brew", lib.loc="C:/Users/TELEmedia Network/Documents/R/win-library/3.0")
55+55
library("jpeg", lib.loc="C:/Users/TELEmedia Network/Documents/R/win-library/3.0")
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <-  c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555,z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my
my_div
library("swirl")
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
?seq
seq(0,10, by = 0.5)
my_seq <- seq(5, 10, length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0,40)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10
)
rep(c(0, 1, 2), each =10
)
num_vect <- c(0.5, 55, -10,6)
tf <- (num_vect < 1)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c( "My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char,"Kwame")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
library("swirl")
swirl()
x <- c(44, NA, 5, NA)
x *3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x)
| & x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <-c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
vect2
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <-  1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <-my_vector
?matrix()
?matrix
my_matrix2 <- matrix (1:20, 4,5)
identical(my_matrix, my_matrix2)
patients <- ("Bill", "Gina" , "Kelly" , "Sean")
patients <- c("Bill", "Gina" , "Kelly" , "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cname <- c("patient","age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
ls(0)
ls()
quit()
pandoc('foo.md', format='latex')
render("input.Rmd", "pdf_document")
pandoc -s example-r-markdown.html -o example-r-markdown.pdf
setwd("D:/My docs/Analysis + Cousera/Data Science Specialization/5- Reproducible Research/Proj/Prog 1/RepData_PeerAssessment2")
activity.data <- read.csv("activity.csv")
activity.data$date <- as.Date(activity.data$date,"%Y-%m-%d")
steps.day <- tapply(activity.data$steps, activity.data$date, sum)
steps.avg <- tapply(activity.data$steps, activity.data$interval, mean, na.rm =T)
missing <- table(complete.cases(activity.data))
newData <- activity.data
newData[1:288, 1] <- steps.avg
newData[2017:2304, 1]<- steps.avg
newData[8929:9216, 1]<- steps.avg
newData[9793:10080, 1]<- steps.avg
newData[11233:11520, 1]<- steps.avg
newData[11521:11808, 1]<- steps.avg
newData[12673:12960, 1]<- steps.avg
newData[17281:17568, 1]<- steps.avg
steps.new <- tapply(newData$steps, newData$date, sum)
weekdays(newData$date)
newData$whichday <- weekdays(newData$date)
weekday <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekend <- c("Saturday", "Sunday")
for (i in nrow(newData)) {if (newData[i,4] %in% weekday) {newData$whichday[i] = "weekday"} else "weekend"}
newData
newData[whichday=="Monday"] == "weekday"
newData$whichday <- weekdays(newData$date)
newData[whichday=="Monday"] == "weekday"
newData$whichday[newData$whichday=="Monday"] == "weekday"
newData$whichday[newData$whichday=="Monday"] = "weekday"
newData
newData$whichday[newData$whichday=="Thursday"] = "weekday"
newData$whichday[newData$whichday=="Monday"] = "weekday"
newData$whichday[newData$whichday=="Tuesay"] = "weekday"
newData$whichday[newData$whichday=="Wednesday"] = "weekday"
newData$whichday[newData$whichday=="Thursday"] = "weekday"
newData$whichday[newData$whichday=="Friday"] = "weekday"
newData$whichday[newData$whichday=="Saturday"] = "weekend"
newData$whichday[newData$whichday=="Sunday"] = "weekend"
newData
newData$whichday[newData$whichday=="Tuesday"] = "weekday"
newData
head(newData)
class(newdata$whichday)
class(newData$whichday)
as.factor (newData$whichday)
as.factor (newData$whichday)
newData$whichday <- as.factor (newData$whichday)
class(newData$whichday)
head(newData)
weekdays <- subset(newData, newData=="weekdays")
weekdays <- subset(newData, newData$whichday=="weekdays")
weekdays
weekdays <- subset(newData, newData$whichday=="weekday")
weekdays
steps.weekday <- tapply(weekdays$steps, weekdays$interval, mean)
steps.weekday
weekends <- subset(newData, newData$whichday=="weekend")
steps.weekend <- tapply(weekdays$steps, weekdays$interval, mean)
steps.weekend
library (lattice)
xyplot( newData$whichday, newData)
xyplot( steps.weekday$whichday, newData)
xyplot( steps.weekday$whichday, weekdays)
xyplot( newData$steps ~ newData$interval | whichday, data = newData)
xyplot( newData$steps ~ newData$interval | whichday, data = newData, layout = c(1,2))
xyplot( newData$steps ~ newData$interval | whichday, data = newData, layout = c(1,2), type ="l")
new <- c("weekdays", "weekends")
xyplot( newData$steps ~ newData$interval | whichday, new, data = newData, layout = c(1,2), type ="l")
xyplot( newData$steps ~ newData$interval | whichday, new, layout = c(1,2), type ="l")
new
new <- c(weekdays, weekends)
xyplot( newData$steps ~ newData$interval | whichday, new, layout = c(1,2), type ="l")
xyplot( newData$steps ~ newData$interval | whichday, new,data= newData, layout = c(1,2), type ="l")
xyplot( newData$steps ~ newData$interval | whichday, data= newData, layout = c(1,2), type ="l")
new <- aggregate(newData$steps, by = list(newData$interval, newData$whichday), mean)
new
names(new) <- c("interval", "whichday", "averagesteps")
new
xyplot( steps ~ interval | whichday, data= new, layout = c(1,2), type ="l")
xyplot( averagesteps ~ interval | whichday, data= new, layout = c(1,2), type ="l")
xyplot( averagesteps ~ interval | whichday, data= new, layout = c(1,2), type ="l", xlab = "Interval", ylab = "Average number of steps")
library(pysch)
library(psych)
summary (new)
describe (new)
describeBy (new)
describeBy (new, whichday)
describeBy (new, new$whichday)
combine <- c(steps.weekday, steps.weekend)
combine
data.frame(combine)
new
